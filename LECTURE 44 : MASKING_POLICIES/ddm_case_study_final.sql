
-- set up roles
CREATE OR REPLACE ROLE ANALYST;
CREATE OR REPLACE ROLE TESTER;
CREATE OR REPLACE ROLE DEVELOPER;

CREATE OR REPLACE ROLE DESIGNER;
-- Set Up User

-- For TONY User
CREATE OR REPLACE USER user_designer
PASSWORD = 'Designer123!'
DEFAULT_ROLE = DESIGNER
DEFAULT_WAREHOUSE = DEMO_WAREHOUSE
MUST_CHANGE_PASSWORD = TRUE;  -- User will be prompted to change the password on first login

-- For TONY User
CREATE OR REPLACE USER user_tony
PASSWORD = 'Tony123!'
DEFAULT_ROLE = ANALYST
DEFAULT_WAREHOUSE = DEMO_WAREHOUSE
MUST_CHANGE_PASSWORD = TRUE;  -- User will be prompted to change the password on first login

-- For STEVE User
CREATE OR REPLACE USER user_steve
PASSWORD = 'Steve123!'
DEFAULT_ROLE = TESTER
DEFAULT_WAREHOUSE = DEMO_WAREHOUSE
MUST_CHANGE_PASSWORD = TRUE;

-- -- For BRUCE User
CREATE OR REPLACE USER user_bruce
PASSWORD = 'Bruce123!'
DEFAULT_ROLE = DEVELOPER
DEFAULT_WAREHOUSE = DEMO_WAREHOUSE
MUST_CHANGE_PASSWORD = TRUE;

grant role ANALYST to user user_tony;
grant role DEVELOPER to user user_bruce;
grant role TESTER to user user_steve;
grant role DESIGNER to user user_designer;

-- grand all role to main account
grant role ANALYST to user ANANDTIGERANALYTICS;
grant role DEVELOPER to user ANANDTIGERANALYTICS;
grant role TESTER to user ANANDTIGERANALYTICS;
grant role DESIGNER to user ANANDTIGERANALYTICS;

--  Granting Necessary Access to the Designer role
GRANT USAGE ON WAREHOUSE DEMO_WAREHOUSE TO ROLE DESIGNER;
GRANT USAGE ON DATABASE DEMO_DATABASE TO ROLE DESIGNER;
GRANT ALL ON SCHEMA DEMO_SCHEMA TO ROLE DESIGNER;
GRANT ALL PRIVILEGES ON SCHEMA DEMO_SCHEMA TO ROLE DESIGNER;
GRANT SELECT ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE DESIGNER;


-- Granting Necessary Access to the DEVELOPER role
GRANT USAGE ON WAREHOUSE DEMO_WAREHOUSE TO ROLE DEVELOPER;
GRANT USAGE ON DATABASE DEMO_DATABASE TO ROLE DEVELOPER;
GRANT ALL ON SCHEMA DEMO_SCHEMA TO ROLE DEVELOPER;
GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE DEVELOPER;
GRANT ALL PRIVILEGES ON SCHEMA DEMO_SCHEMA TO ROLE DEVELOPER;
GRANT INSERT, UPDATE, DELETE ON FUTURE TABLES IN SCHEMA DEMO_SCHEMA TO ROLE DEVELOPER;


-- Granting Necessary Access to the ANALYST role
GRANT USAGE ON WAREHOUSE DEMO_WAREHOUSE TO ROLE ANALYST;
GRANT USAGE ON DATABASE DEMO_DATABASE TO ROLE ANALYST;
GRANT ALL ON SCHEMA DEMO_SCHEMA TO ROLE ANALYST;
GRANT ALL PRIVILEGES ON SCHEMA DEMO_SCHEMA TO ROLE ANALYST;
GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE ANALYST;

-- Granting Necessary Access to the TESTER role
GRANT USAGE ON WAREHOUSE DEMO_WAREHOUSE TO ROLE TESTER;
GRANT USAGE ON DATABASE DEMO_DATABASE TO ROLE TESTER;
GRANT ALL PRIVILEGES ON SCHEMA DEMO_SCHEMA TO ROLE TESTER;
GRANT SELECT ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE TESTER;


-- SHow grants
SHOW GRANTS ON DATABASE DEMO_DATABASE;
SHOW GRANTS ON SCHEMA DEMO_SCHEMA;

SHOW GRANTS TO USER user_tony;
SHOW GRANTS TO USER user_steve;
SHOW GRANTS TO USER user_bruce;

SHOW GRANTS TO ROLE DEVELOPER;
SHOW GRANTS TO ROLE TESTER;
SHOW GRANTS TO ROLE ANALYST;

DROP TABLE CREDIT_CARD_CUSTOMERS;
--Lets create this table under developer role

CREATE TABLE CREDIT_CARD_CUSTOMERS (
    CUST_ID VARCHAR(20) PRIMARY KEY,
    CREDIT_CARD_NUMBER VARCHAR(19),
    BALANCE NUMBER(10,2),
    PURCHASES NUMBER(10,2),
    INSTALLMENTS_PURCHASES NUMBER(10,2),
    CASH_ADVANCE NUMBER(10,2),
    CREDIT_LIMIT NUMBER(10,2),
    PAYMENTS NUMBER(10,2),
    MINIMUM_PAYMENTS NUMBER(10,2),
    TENURE INTEGER,
    DATE_OF_TXN DATE
);

SELECT * FROM CREDIT_CARD_CUSTOMERS;


-- Set up masking policy--
CREATE MASKING POLICY IF NOT EXISTS MASK_CREDIT_CARDS AS (CREDIT_CARD_NUMBER STRING) 
RETURNS STRING -> 
CASE 
   WHEN CURRENT_ROLE() IN ('DEVELOPER','ACCOUNTADMIN') THEN CREDIT_CARD_NUMBER
   WHEN CURRENT_ROLE() IN ('ANALYST') THEN REGEXP_REPLACE(CREDIT_CARD_NUMBER, '^.{7}', '*******')
   WHEN CURRENT_ROLE() IN ('TESTER') THEN '**********'
   ELSE '***CAN NOT BE SEEN***'
END

-- FOR AN EXISTING TABLE ON VIEW, EXECUTE THE FOLLOWING STATEMENT--
ALTER TABLE IF EXISTS CREDIT_CARD_CUSTOMER MODIFY COLUMN creditcard SET MASKING POLICY MASK_CREDT_CARD;
ALTER TABLE IF EXISTS CREDIT_CARD_CUSTOMER MODIFY COLUMN PAN SET MASKING POLICY MASK_PAN_CARD;

DESC TABLE CREDIT_CARD_CUSTOMERS;

-- give necesssary grants from the developer role where you are executing the task rather than giving all priviledges
GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE ACCOUNTADMIN;
GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE DESIGNER;
GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE TESTER;
GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE ANALYST;

-- Not required if given above
GRANT ALL PRIVILEGES ON TABLE CREDIT_CARD_CUSTOMER TO ROLE ACCOUNTADMIN;
GRANT ALL PRIVILEGES ON TABLE CREDIT_CARD_CUSTOMER TO ROLE TESTER;
GRANT ALL PRIVILEGES ON TABLE CREDIT_CARD_CUSTOMER TO ROLE ACCOUNTADMIN;
GRANT ALL PRIVILEGES ON TABLE CREDIT_CARD_CUSTOMER TO ROLE ANALYST;



-- Validating policies

USE ROLE ACCOUNTADMIN;
SELECT * FROM DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMER;

USE ROLE ANALYST;
SELECT * FROM DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMER;

USE ROLE DEVELOPER;
SELECT * FROM DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMER;

USE ROLE TESTER;
SELECT * FROM DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS;

USE ROLE DESIGNER;
SELECT * FROM DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS;

--How we can remove the masking policy--
alter table if exists CREDIT_CARD_CUSTOMER modify column creditcard unset masking policy;
alter table if exists CREDIT_CARD_CUSTOMER modify column PAN unset masking policy;

-- -- drop masking policies
drop masking policy MASK_CREDIT_CARDS;

-- drop masking policies
drop masking policy MASK_CREDIT_CARDS;

-- Run from the developer mode and then give necessary access
REVOKE ALL PRIVILEGES ON TABLE CREDIT_CARD_CUSTOMERS_DEVELOPER FROM TESTER;

-- this access can only be provided via ACCOUNTADMIN as SCHEMA level grants ON FUTURE TABLE in that SCHEMA cannot be given by any other role even that role creates a table in that particular schema
GRANT SELECT ON FUTURE TABLES IN SCHEMA DEMO_SCHEMA TO ROLE DEVELOPER;
GRANT SELECT ON FUTURE TABLES IN SCHEMA DEMO_SCHEMA TO ROLE DESIGNER;
GRANT SELECT ON FUTURE TABLES IN SCHEMA DEMO_SCHEMA TO ROLE ANALYST;
GRANT SELECT ON FUTURE TABLES IN SCHEMA DEMO_SCHEMA TO ROLE TESTER;

-- -- this is not required if account admin has already given read access (FUTURE TABLE).If not given then any table which DEVELOPER role is creating he/she can give the necessary access to any other ROLE
GRANT SELECT ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE DESIGNER;
GRANT SELECT ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE ANALYST;
GRANT SELECT ON ALL TABLES IN SCHEMA DEMO_SCHEMA TO ROLE TESTER;
